trigger:
- master
- features/*

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
  - task: Bash@3
    displayName: 'Build Script'
    inputs:
      targetType: filePath
      filePath: ./build.sh

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core 3.x SDK'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
  - task: PowerShell@2
    displayName: 'Build Script'
    inputs:
      targetType: filePath
      filePath: ./build.ps1  
  - task: NuGetCommand@2
    displayName: 'Push to MyGet'
    inputs:
      command: push
      packagesToPush: 'nuget/*.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: 'MyGet'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  - task: NuGetCommand@2
    displayName: 'Push to AzureArtifacts'
    inputs:
      command: 'push'
      packagesToPush: 'nuget/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'e845e192-3505-4ec1-8b52-7e11e77d5e2a/e94fc75b-9e25-43e7-bfbc-f0af758115c1'
      allowPackageConflicts: true
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  - task: NuGetCommand@2
    displayName: 'Push to GitHub packages'
    inputs:
      command: push
      packagesToPush: 'nuget/*.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: 'GitHub Packages'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))